#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Haystack
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="haystack")]
	public partial class LinqToSqlAzureHaystackDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertT_TwitterUser(T_TwitterUser instance);
    partial void UpdateT_TwitterUser(T_TwitterUser instance);
    partial void DeleteT_TwitterUser(T_TwitterUser instance);
    partial void InsertT_TwitterUrl(T_TwitterUrl instance);
    partial void UpdateT_TwitterUrl(T_TwitterUrl instance);
    partial void DeleteT_TwitterUrl(T_TwitterUrl instance);
    partial void InsertT_TwitterTweet(T_TwitterTweet instance);
    partial void UpdateT_TwitterTweet(T_TwitterTweet instance);
    partial void DeleteT_TwitterTweet(T_TwitterTweet instance);
    partial void InsertT_TwitterPlace(T_TwitterPlace instance);
    partial void UpdateT_TwitterPlace(T_TwitterPlace instance);
    partial void DeleteT_TwitterPlace(T_TwitterPlace instance);
    partial void InsertT_TwitterMention(T_TwitterMention instance);
    partial void UpdateT_TwitterMention(T_TwitterMention instance);
    partial void DeleteT_TwitterMention(T_TwitterMention instance);
    partial void InsertT_TwitterMedia(T_TwitterMedia instance);
    partial void UpdateT_TwitterMedia(T_TwitterMedia instance);
    partial void DeleteT_TwitterMedia(T_TwitterMedia instance);
    partial void InsertT_TwitterHashTag(T_TwitterHashTag instance);
    partial void UpdateT_TwitterHashTag(T_TwitterHashTag instance);
    partial void DeleteT_TwitterHashTag(T_TwitterHashTag instance);
    partial void InsertT_TwitterGeoLocation(T_TwitterGeoLocation instance);
    partial void UpdateT_TwitterGeoLocation(T_TwitterGeoLocation instance);
    partial void DeleteT_TwitterGeoLocation(T_TwitterGeoLocation instance);
    partial void InsertT_CollectionTask(T_CollectionTask instance);
    partial void UpdateT_CollectionTask(T_CollectionTask instance);
    partial void DeleteT_CollectionTask(T_CollectionTask instance);
    partial void InsertT_TwitterFriend(T_TwitterFriend instance);
    partial void UpdateT_TwitterFriend(T_TwitterFriend instance);
    partial void DeleteT_TwitterFriend(T_TwitterFriend instance);
    partial void InsertT_TwitterFollower(T_TwitterFollower instance);
    partial void UpdateT_TwitterFollower(T_TwitterFollower instance);
    partial void DeleteT_TwitterFollower(T_TwitterFollower instance);
    #endregion
		
		public LinqToSqlAzureHaystackDataContext() : 
				base(global::Haystack.Properties.Settings.Default.haystackConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlAzureHaystackDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlAzureHaystackDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlAzureHaystackDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlAzureHaystackDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_TwitterUser> T_TwitterUsers
		{
			get
			{
				return this.GetTable<T_TwitterUser>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterUrl> T_TwitterUrls
		{
			get
			{
				return this.GetTable<T_TwitterUrl>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterTweet> T_TwitterTweets
		{
			get
			{
				return this.GetTable<T_TwitterTweet>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterPlace> T_TwitterPlaces
		{
			get
			{
				return this.GetTable<T_TwitterPlace>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterMention> T_TwitterMentions
		{
			get
			{
				return this.GetTable<T_TwitterMention>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterMedia> T_TwitterMedias
		{
			get
			{
				return this.GetTable<T_TwitterMedia>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterHashTag> T_TwitterHashTags
		{
			get
			{
				return this.GetTable<T_TwitterHashTag>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterGeoLocation> T_TwitterGeoLocations
		{
			get
			{
				return this.GetTable<T_TwitterGeoLocation>();
			}
		}
		
		public System.Data.Linq.Table<T_CollectionTask> T_CollectionTasks
		{
			get
			{
				return this.GetTable<T_CollectionTask>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterFriend> T_TwitterFriends
		{
			get
			{
				return this.GetTable<T_TwitterFriend>();
			}
		}
		
		public System.Data.Linq.Table<T_TwitterFollower> T_TwitterFollowers
		{
			get
			{
				return this.GetTable<T_TwitterFollower>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterUsers")]
	public partial class T_TwitterUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private string _Description;
		
		private System.Nullable<int> _FollowersCount;
		
		private System.Nullable<long> _UserId;
		
		private System.Nullable<bool> _IsProtected;
		
		private string _Location;
		
		private string _Name;
		
		private string _ProfileImageUrl;
		
		private string _ScreenName;
		
		private string _Url;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<bool> _IsVerified;
		
		private System.Nullable<bool> _IsGeoEnabled;
		
		private string _ProfileBackgroundImageUrl;
		
		private System.Nullable<int> _StatusesCount;
		
		private System.Nullable<int> _FriendsCount;
		
		private System.Nullable<int> _FavoritesCount;
		
		private System.Nullable<int> _ListedCount;
		
		private string _TimeZone;
		
		private string _UtcOffset;
		
		private string _Language;
		
		private System.Nullable<bool> _IsContributorsEnabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFollowersCountChanging(System.Nullable<int> value);
    partial void OnFollowersCountChanged();
    partial void OnUserIdChanging(System.Nullable<long> value);
    partial void OnUserIdChanged();
    partial void OnIsProtectedChanging(System.Nullable<bool> value);
    partial void OnIsProtectedChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProfileImageUrlChanging(string value);
    partial void OnProfileImageUrlChanged();
    partial void OnScreenNameChanging(string value);
    partial void OnScreenNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnIsVerifiedChanging(System.Nullable<bool> value);
    partial void OnIsVerifiedChanged();
    partial void OnIsGeoEnabledChanging(System.Nullable<bool> value);
    partial void OnIsGeoEnabledChanged();
    partial void OnProfileBackgroundImageUrlChanging(string value);
    partial void OnProfileBackgroundImageUrlChanged();
    partial void OnStatusesCountChanging(System.Nullable<int> value);
    partial void OnStatusesCountChanged();
    partial void OnFriendsCountChanging(System.Nullable<int> value);
    partial void OnFriendsCountChanged();
    partial void OnFavoritesCountChanging(System.Nullable<int> value);
    partial void OnFavoritesCountChanged();
    partial void OnListedCountChanging(System.Nullable<int> value);
    partial void OnListedCountChanged();
    partial void OnTimeZoneChanging(string value);
    partial void OnTimeZoneChanged();
    partial void OnUtcOffsetChanging(string value);
    partial void OnUtcOffsetChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnIsContributorsEnabledChanging(System.Nullable<bool> value);
    partial void OnIsContributorsEnabledChanged();
    #endregion
		
		public T_TwitterUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowersCount", DbType="Int")]
		public System.Nullable<int> FollowersCount
		{
			get
			{
				return this._FollowersCount;
			}
			set
			{
				if ((this._FollowersCount != value))
				{
					this.OnFollowersCountChanging(value);
					this.SendPropertyChanging();
					this._FollowersCount = value;
					this.SendPropertyChanged("FollowersCount");
					this.OnFollowersCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProtected", DbType="Bit")]
		public System.Nullable<bool> IsProtected
		{
			get
			{
				return this._IsProtected;
			}
			set
			{
				if ((this._IsProtected != value))
				{
					this.OnIsProtectedChanging(value);
					this.SendPropertyChanging();
					this._IsProtected = value;
					this.SendPropertyChanged("IsProtected");
					this.OnIsProtectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(256)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileImageUrl", DbType="NVarChar(256)")]
		public string ProfileImageUrl
		{
			get
			{
				return this._ProfileImageUrl;
			}
			set
			{
				if ((this._ProfileImageUrl != value))
				{
					this.OnProfileImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ProfileImageUrl = value;
					this.SendPropertyChanged("ProfileImageUrl");
					this.OnProfileImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenName", DbType="NVarChar(256)")]
		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}
			set
			{
				if ((this._ScreenName != value))
				{
					this.OnScreenNameChanging(value);
					this.SendPropertyChanging();
					this._ScreenName = value;
					this.SendPropertyChanged("ScreenName");
					this.OnScreenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerified", DbType="Bit")]
		public System.Nullable<bool> IsVerified
		{
			get
			{
				return this._IsVerified;
			}
			set
			{
				if ((this._IsVerified != value))
				{
					this.OnIsVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsVerified = value;
					this.SendPropertyChanged("IsVerified");
					this.OnIsVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGeoEnabled", DbType="Bit")]
		public System.Nullable<bool> IsGeoEnabled
		{
			get
			{
				return this._IsGeoEnabled;
			}
			set
			{
				if ((this._IsGeoEnabled != value))
				{
					this.OnIsGeoEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsGeoEnabled = value;
					this.SendPropertyChanged("IsGeoEnabled");
					this.OnIsGeoEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileBackgroundImageUrl", DbType="NVarChar(256)")]
		public string ProfileBackgroundImageUrl
		{
			get
			{
				return this._ProfileBackgroundImageUrl;
			}
			set
			{
				if ((this._ProfileBackgroundImageUrl != value))
				{
					this.OnProfileBackgroundImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ProfileBackgroundImageUrl = value;
					this.SendPropertyChanged("ProfileBackgroundImageUrl");
					this.OnProfileBackgroundImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusesCount", DbType="Int")]
		public System.Nullable<int> StatusesCount
		{
			get
			{
				return this._StatusesCount;
			}
			set
			{
				if ((this._StatusesCount != value))
				{
					this.OnStatusesCountChanging(value);
					this.SendPropertyChanging();
					this._StatusesCount = value;
					this.SendPropertyChanged("StatusesCount");
					this.OnStatusesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendsCount", DbType="Int")]
		public System.Nullable<int> FriendsCount
		{
			get
			{
				return this._FriendsCount;
			}
			set
			{
				if ((this._FriendsCount != value))
				{
					this.OnFriendsCountChanging(value);
					this.SendPropertyChanging();
					this._FriendsCount = value;
					this.SendPropertyChanged("FriendsCount");
					this.OnFriendsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoritesCount", DbType="Int")]
		public System.Nullable<int> FavoritesCount
		{
			get
			{
				return this._FavoritesCount;
			}
			set
			{
				if ((this._FavoritesCount != value))
				{
					this.OnFavoritesCountChanging(value);
					this.SendPropertyChanging();
					this._FavoritesCount = value;
					this.SendPropertyChanged("FavoritesCount");
					this.OnFavoritesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListedCount", DbType="Int")]
		public System.Nullable<int> ListedCount
		{
			get
			{
				return this._ListedCount;
			}
			set
			{
				if ((this._ListedCount != value))
				{
					this.OnListedCountChanging(value);
					this.SendPropertyChanging();
					this._ListedCount = value;
					this.SendPropertyChanged("ListedCount");
					this.OnListedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="NVarChar(256)")]
		public string TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtcOffset", DbType="NVarChar(256)")]
		public string UtcOffset
		{
			get
			{
				return this._UtcOffset;
			}
			set
			{
				if ((this._UtcOffset != value))
				{
					this.OnUtcOffsetChanging(value);
					this.SendPropertyChanging();
					this._UtcOffset = value;
					this.SendPropertyChanged("UtcOffset");
					this.OnUtcOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(256)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContributorsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsContributorsEnabled
		{
			get
			{
				return this._IsContributorsEnabled;
			}
			set
			{
				if ((this._IsContributorsEnabled != value))
				{
					this.OnIsContributorsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsContributorsEnabled = value;
					this.SendPropertyChanged("IsContributorsEnabled");
					this.OnIsContributorsEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterUrls")]
	public partial class T_TwitterUrl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private System.Nullable<long> _TweetId;
		
		private System.Nullable<long> _TweeterUserId;
		
		private string _Value;
		
		private string _ExpandedValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnTweetIdChanging(System.Nullable<long> value);
    partial void OnTweetIdChanged();
    partial void OnTweeterUserIdChanging(System.Nullable<long> value);
    partial void OnTweeterUserIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnExpandedValueChanging(string value);
    partial void OnExpandedValueChanged();
    #endregion
		
		public T_TwitterUrl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweetId", DbType="BigInt")]
		public System.Nullable<long> TweetId
		{
			get
			{
				return this._TweetId;
			}
			set
			{
				if ((this._TweetId != value))
				{
					this.OnTweetIdChanging(value);
					this.SendPropertyChanging();
					this._TweetId = value;
					this.SendPropertyChanged("TweetId");
					this.OnTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterUserId", DbType="BigInt")]
		public System.Nullable<long> TweeterUserId
		{
			get
			{
				return this._TweeterUserId;
			}
			set
			{
				if ((this._TweeterUserId != value))
				{
					this.OnTweeterUserIdChanging(value);
					this.SendPropertyChanging();
					this._TweeterUserId = value;
					this.SendPropertyChanged("TweeterUserId");
					this.OnTweeterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(2000)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpandedValue", DbType="NVarChar(2000)")]
		public string ExpandedValue
		{
			get
			{
				return this._ExpandedValue;
			}
			set
			{
				if ((this._ExpandedValue != value))
				{
					this.OnExpandedValueChanging(value);
					this.SendPropertyChanging();
					this._ExpandedValue = value;
					this.SendPropertyChanged("ExpandedValue");
					this.OnExpandedValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterTweets")]
	public partial class T_TwitterTweet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<long> _TweetId;
		
		private string _InReplyToScreenName;
		
		private System.Nullable<long> _InReplayToTweetId;
		
		private System.Nullable<long> _InReplayToUserId;
		
		private System.Nullable<bool> _IsFavorited;
		
		private System.Nullable<bool> _IsTruncated;
		
		private string _Source;
		
		private string _Text;
		
		private string _TweeterScreenName;
		
		private System.Nullable<long> _TweeterId;
		
		private System.Nullable<bool> _IsPossiblySensitive;
		
		private System.Nullable<int> _RetweetCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnTweetIdChanging(System.Nullable<long> value);
    partial void OnTweetIdChanged();
    partial void OnInReplyToScreenNameChanging(string value);
    partial void OnInReplyToScreenNameChanged();
    partial void OnInReplayToTweetIdChanging(System.Nullable<long> value);
    partial void OnInReplayToTweetIdChanged();
    partial void OnInReplayToUserIdChanging(System.Nullable<long> value);
    partial void OnInReplayToUserIdChanged();
    partial void OnIsFavoritedChanging(System.Nullable<bool> value);
    partial void OnIsFavoritedChanged();
    partial void OnIsTruncatedChanging(System.Nullable<bool> value);
    partial void OnIsTruncatedChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTweeterScreenNameChanging(string value);
    partial void OnTweeterScreenNameChanged();
    partial void OnTweeterIdChanging(System.Nullable<long> value);
    partial void OnTweeterIdChanged();
    partial void OnIsPossiblySensitiveChanging(System.Nullable<bool> value);
    partial void OnIsPossiblySensitiveChanged();
    partial void OnRetweetCountChanging(System.Nullable<int> value);
    partial void OnRetweetCountChanged();
    #endregion
		
		public T_TwitterTweet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweetId", DbType="BigInt")]
		public System.Nullable<long> TweetId
		{
			get
			{
				return this._TweetId;
			}
			set
			{
				if ((this._TweetId != value))
				{
					this.OnTweetIdChanging(value);
					this.SendPropertyChanging();
					this._TweetId = value;
					this.SendPropertyChanged("TweetId");
					this.OnTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplyToScreenName", DbType="NVarChar(256)")]
		public string InReplyToScreenName
		{
			get
			{
				return this._InReplyToScreenName;
			}
			set
			{
				if ((this._InReplyToScreenName != value))
				{
					this.OnInReplyToScreenNameChanging(value);
					this.SendPropertyChanging();
					this._InReplyToScreenName = value;
					this.SendPropertyChanged("InReplyToScreenName");
					this.OnInReplyToScreenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplayToTweetId", DbType="BigInt")]
		public System.Nullable<long> InReplayToTweetId
		{
			get
			{
				return this._InReplayToTweetId;
			}
			set
			{
				if ((this._InReplayToTweetId != value))
				{
					this.OnInReplayToTweetIdChanging(value);
					this.SendPropertyChanging();
					this._InReplayToTweetId = value;
					this.SendPropertyChanged("InReplayToTweetId");
					this.OnInReplayToTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplayToUserId", DbType="BigInt")]
		public System.Nullable<long> InReplayToUserId
		{
			get
			{
				return this._InReplayToUserId;
			}
			set
			{
				if ((this._InReplayToUserId != value))
				{
					this.OnInReplayToUserIdChanging(value);
					this.SendPropertyChanging();
					this._InReplayToUserId = value;
					this.SendPropertyChanged("InReplayToUserId");
					this.OnInReplayToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFavorited", DbType="Bit")]
		public System.Nullable<bool> IsFavorited
		{
			get
			{
				return this._IsFavorited;
			}
			set
			{
				if ((this._IsFavorited != value))
				{
					this.OnIsFavoritedChanging(value);
					this.SendPropertyChanging();
					this._IsFavorited = value;
					this.SendPropertyChanged("IsFavorited");
					this.OnIsFavoritedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTruncated", DbType="Bit")]
		public System.Nullable<bool> IsTruncated
		{
			get
			{
				return this._IsTruncated;
			}
			set
			{
				if ((this._IsTruncated != value))
				{
					this.OnIsTruncatedChanging(value);
					this.SendPropertyChanging();
					this._IsTruncated = value;
					this.SendPropertyChanged("IsTruncated");
					this.OnIsTruncatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(256)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(256)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterScreenName", DbType="NVarChar(256)")]
		public string TweeterScreenName
		{
			get
			{
				return this._TweeterScreenName;
			}
			set
			{
				if ((this._TweeterScreenName != value))
				{
					this.OnTweeterScreenNameChanging(value);
					this.SendPropertyChanging();
					this._TweeterScreenName = value;
					this.SendPropertyChanged("TweeterScreenName");
					this.OnTweeterScreenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterId", DbType="BigInt")]
		public System.Nullable<long> TweeterId
		{
			get
			{
				return this._TweeterId;
			}
			set
			{
				if ((this._TweeterId != value))
				{
					this.OnTweeterIdChanging(value);
					this.SendPropertyChanging();
					this._TweeterId = value;
					this.SendPropertyChanged("TweeterId");
					this.OnTweeterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPossiblySensitive", DbType="Bit")]
		public System.Nullable<bool> IsPossiblySensitive
		{
			get
			{
				return this._IsPossiblySensitive;
			}
			set
			{
				if ((this._IsPossiblySensitive != value))
				{
					this.OnIsPossiblySensitiveChanging(value);
					this.SendPropertyChanging();
					this._IsPossiblySensitive = value;
					this.SendPropertyChanged("IsPossiblySensitive");
					this.OnIsPossiblySensitiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetweetCount", DbType="Int")]
		public System.Nullable<int> RetweetCount
		{
			get
			{
				return this._RetweetCount;
			}
			set
			{
				if ((this._RetweetCount != value))
				{
					this.OnRetweetCountChanging(value);
					this.SendPropertyChanging();
					this._RetweetCount = value;
					this.SendPropertyChanged("RetweetCount");
					this.OnRetweetCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterPlaces")]
	public partial class T_TwitterPlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private System.Nullable<long> _TweetId;
		
		private System.Nullable<long> _TweeterUserId;
		
		private string _PlaceId;
		
		private string _Name;
		
		private string _FullName;
		
		private string _Country;
		
		private string _CountryCode;
		
		private string _Url;
		
		private string _PlaceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnTweetIdChanging(System.Nullable<long> value);
    partial void OnTweetIdChanged();
    partial void OnTweeterUserIdChanging(System.Nullable<long> value);
    partial void OnTweeterUserIdChanged();
    partial void OnPlaceIdChanging(string value);
    partial void OnPlaceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnPlaceTypeChanging(string value);
    partial void OnPlaceTypeChanged();
    #endregion
		
		public T_TwitterPlace()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweetId", DbType="BigInt")]
		public System.Nullable<long> TweetId
		{
			get
			{
				return this._TweetId;
			}
			set
			{
				if ((this._TweetId != value))
				{
					this.OnTweetIdChanging(value);
					this.SendPropertyChanging();
					this._TweetId = value;
					this.SendPropertyChanged("TweetId");
					this.OnTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterUserId", DbType="BigInt")]
		public System.Nullable<long> TweeterUserId
		{
			get
			{
				return this._TweeterUserId;
			}
			set
			{
				if ((this._TweeterUserId != value))
				{
					this.OnTweeterUserIdChanging(value);
					this.SendPropertyChanging();
					this._TweeterUserId = value;
					this.SendPropertyChanged("TweeterUserId");
					this.OnTweeterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceId", DbType="NVarChar(256)")]
		public string PlaceId
		{
			get
			{
				return this._PlaceId;
			}
			set
			{
				if ((this._PlaceId != value))
				{
					this.OnPlaceIdChanging(value);
					this.SendPropertyChanging();
					this._PlaceId = value;
					this.SendPropertyChanged("PlaceId");
					this.OnPlaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(256)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(256)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(256)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(256)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceType", DbType="NVarChar(256)")]
		public string PlaceType
		{
			get
			{
				return this._PlaceType;
			}
			set
			{
				if ((this._PlaceType != value))
				{
					this.OnPlaceTypeChanging(value);
					this.SendPropertyChanging();
					this._PlaceType = value;
					this.SendPropertyChanged("PlaceType");
					this.OnPlaceTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterMentions")]
	public partial class T_TwitterMention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private System.Nullable<long> _TweetId;
		
		private System.Nullable<long> _TweeterUserId;
		
		private System.Nullable<long> _MentionId;
		
		private string _ScreenName;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnTweetIdChanging(System.Nullable<long> value);
    partial void OnTweetIdChanged();
    partial void OnTweeterUserIdChanging(System.Nullable<long> value);
    partial void OnTweeterUserIdChanged();
    partial void OnMentionIdChanging(System.Nullable<long> value);
    partial void OnMentionIdChanged();
    partial void OnScreenNameChanging(string value);
    partial void OnScreenNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public T_TwitterMention()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweetId", DbType="BigInt")]
		public System.Nullable<long> TweetId
		{
			get
			{
				return this._TweetId;
			}
			set
			{
				if ((this._TweetId != value))
				{
					this.OnTweetIdChanging(value);
					this.SendPropertyChanging();
					this._TweetId = value;
					this.SendPropertyChanged("TweetId");
					this.OnTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterUserId", DbType="BigInt")]
		public System.Nullable<long> TweeterUserId
		{
			get
			{
				return this._TweeterUserId;
			}
			set
			{
				if ((this._TweeterUserId != value))
				{
					this.OnTweeterUserIdChanging(value);
					this.SendPropertyChanging();
					this._TweeterUserId = value;
					this.SendPropertyChanged("TweeterUserId");
					this.OnTweeterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MentionId", DbType="BigInt")]
		public System.Nullable<long> MentionId
		{
			get
			{
				return this._MentionId;
			}
			set
			{
				if ((this._MentionId != value))
				{
					this.OnMentionIdChanging(value);
					this.SendPropertyChanging();
					this._MentionId = value;
					this.SendPropertyChanged("MentionId");
					this.OnMentionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenName", DbType="NVarChar(256)")]
		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}
			set
			{
				if ((this._ScreenName != value))
				{
					this.OnScreenNameChanging(value);
					this.SendPropertyChanging();
					this._ScreenName = value;
					this.SendPropertyChanged("ScreenName");
					this.OnScreenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterMedias")]
	public partial class T_TwitterMedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private System.Nullable<long> _TweetId;
		
		private System.Nullable<long> _TweeterUserId;
		
		private System.Nullable<long> _MediaId;
		
		private string _MediaUrl;
		
		private string _Url;
		
		private string _DisplayUrl;
		
		private string _ExpandedUrl;
		
		private string _MediaType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnTweetIdChanging(System.Nullable<long> value);
    partial void OnTweetIdChanged();
    partial void OnTweeterUserIdChanging(System.Nullable<long> value);
    partial void OnTweeterUserIdChanged();
    partial void OnMediaIdChanging(System.Nullable<long> value);
    partial void OnMediaIdChanged();
    partial void OnMediaUrlChanging(string value);
    partial void OnMediaUrlChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDisplayUrlChanging(string value);
    partial void OnDisplayUrlChanged();
    partial void OnExpandedUrlChanging(string value);
    partial void OnExpandedUrlChanged();
    partial void OnMediaTypeChanging(string value);
    partial void OnMediaTypeChanged();
    #endregion
		
		public T_TwitterMedia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweetId", DbType="BigInt")]
		public System.Nullable<long> TweetId
		{
			get
			{
				return this._TweetId;
			}
			set
			{
				if ((this._TweetId != value))
				{
					this.OnTweetIdChanging(value);
					this.SendPropertyChanging();
					this._TweetId = value;
					this.SendPropertyChanged("TweetId");
					this.OnTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterUserId", DbType="BigInt")]
		public System.Nullable<long> TweeterUserId
		{
			get
			{
				return this._TweeterUserId;
			}
			set
			{
				if ((this._TweeterUserId != value))
				{
					this.OnTweeterUserIdChanging(value);
					this.SendPropertyChanging();
					this._TweeterUserId = value;
					this.SendPropertyChanged("TweeterUserId");
					this.OnTweeterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaId", DbType="BigInt")]
		public System.Nullable<long> MediaId
		{
			get
			{
				return this._MediaId;
			}
			set
			{
				if ((this._MediaId != value))
				{
					this.OnMediaIdChanging(value);
					this.SendPropertyChanging();
					this._MediaId = value;
					this.SendPropertyChanged("MediaId");
					this.OnMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(2000)")]
		public string MediaUrl
		{
			get
			{
				return this._MediaUrl;
			}
			set
			{
				if ((this._MediaUrl != value))
				{
					this.OnMediaUrlChanging(value);
					this.SendPropertyChanging();
					this._MediaUrl = value;
					this.SendPropertyChanged("MediaUrl");
					this.OnMediaUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(2000)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayUrl", DbType="NVarChar(2000)")]
		public string DisplayUrl
		{
			get
			{
				return this._DisplayUrl;
			}
			set
			{
				if ((this._DisplayUrl != value))
				{
					this.OnDisplayUrlChanging(value);
					this.SendPropertyChanging();
					this._DisplayUrl = value;
					this.SendPropertyChanged("DisplayUrl");
					this.OnDisplayUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpandedUrl", DbType="NVarChar(2000)")]
		public string ExpandedUrl
		{
			get
			{
				return this._ExpandedUrl;
			}
			set
			{
				if ((this._ExpandedUrl != value))
				{
					this.OnExpandedUrlChanging(value);
					this.SendPropertyChanging();
					this._ExpandedUrl = value;
					this.SendPropertyChanged("ExpandedUrl");
					this.OnExpandedUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaType", DbType="NVarChar(256)")]
		public string MediaType
		{
			get
			{
				return this._MediaType;
			}
			set
			{
				if ((this._MediaType != value))
				{
					this.OnMediaTypeChanging(value);
					this.SendPropertyChanging();
					this._MediaType = value;
					this.SendPropertyChanged("MediaType");
					this.OnMediaTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterHashTags")]
	public partial class T_TwitterHashTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private System.Nullable<long> _TweetId;
		
		private System.Nullable<long> _TweeterUserId;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnTweetIdChanging(System.Nullable<long> value);
    partial void OnTweetIdChanged();
    partial void OnTweeterUserIdChanging(System.Nullable<long> value);
    partial void OnTweeterUserIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public T_TwitterHashTag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweetId", DbType="BigInt")]
		public System.Nullable<long> TweetId
		{
			get
			{
				return this._TweetId;
			}
			set
			{
				if ((this._TweetId != value))
				{
					this.OnTweetIdChanging(value);
					this.SendPropertyChanging();
					this._TweetId = value;
					this.SendPropertyChanged("TweetId");
					this.OnTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterUserId", DbType="BigInt")]
		public System.Nullable<long> TweeterUserId
		{
			get
			{
				return this._TweeterUserId;
			}
			set
			{
				if ((this._TweeterUserId != value))
				{
					this.OnTweeterUserIdChanging(value);
					this.SendPropertyChanging();
					this._TweeterUserId = value;
					this.SendPropertyChanged("TweeterUserId");
					this.OnTweeterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(256)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterGeoLocations")]
	public partial class T_TwitterGeoLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private System.Nullable<long> _TweetId;
		
		private System.Nullable<long> _TweeterUserId;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnTweetIdChanging(System.Nullable<long> value);
    partial void OnTweetIdChanged();
    partial void OnTweeterUserIdChanging(System.Nullable<long> value);
    partial void OnTweeterUserIdChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    #endregion
		
		public T_TwitterGeoLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweetId", DbType="BigInt")]
		public System.Nullable<long> TweetId
		{
			get
			{
				return this._TweetId;
			}
			set
			{
				if ((this._TweetId != value))
				{
					this.OnTweetIdChanging(value);
					this.SendPropertyChanging();
					this._TweetId = value;
					this.SendPropertyChanged("TweetId");
					this.OnTweetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TweeterUserId", DbType="BigInt")]
		public System.Nullable<long> TweeterUserId
		{
			get
			{
				return this._TweeterUserId;
			}
			set
			{
				if ((this._TweeterUserId != value))
				{
					this.OnTweeterUserIdChanging(value);
					this.SendPropertyChanging();
					this._TweeterUserId = value;
					this.SendPropertyChanged("TweeterUserId");
					this.OnTweeterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(16,8)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(16,8)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_CollectionTasks")]
	public partial class T_CollectionTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _State;
		
		private System.DateTime _Created;
		
		private string _Project;
		
		private string _Source;
		
		private string _Command;
		
		private string _Target;
		
		private string _Parameters;
		
		private System.Nullable<System.DateTime> _Issued;
		
		private System.Nullable<System.DateTime> _Collected;
		
		private string _Station;
		
		private string _Collector;
		
		private string _ResultHash;
		
		private string _BlobName;
		
		private System.Nullable<System.DateTime> _Processed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnCommandChanging(string value);
    partial void OnCommandChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnParametersChanging(string value);
    partial void OnParametersChanged();
    partial void OnIssuedChanging(System.Nullable<System.DateTime> value);
    partial void OnIssuedChanged();
    partial void OnCollectedChanging(System.Nullable<System.DateTime> value);
    partial void OnCollectedChanged();
    partial void OnStationChanging(string value);
    partial void OnStationChanged();
    partial void OnCollectorChanging(string value);
    partial void OnCollectorChanged();
    partial void OnResultHashChanging(string value);
    partial void OnResultHashChanged();
    partial void OnBlobNameChanging(string value);
    partial void OnBlobNameChanged();
    partial void OnProcessedChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedChanged();
    #endregion
		
		public T_CollectionTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Command", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Command
		{
			get
			{
				return this._Command;
			}
			set
			{
				if ((this._Command != value))
				{
					this.OnCommandChanging(value);
					this.SendPropertyChanging();
					this._Command = value;
					this.SendPropertyChanged("Command");
					this.OnCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="NVarChar(MAX)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issued", DbType="DateTime")]
		public System.Nullable<System.DateTime> Issued
		{
			get
			{
				return this._Issued;
			}
			set
			{
				if ((this._Issued != value))
				{
					this.OnIssuedChanging(value);
					this.SendPropertyChanging();
					this._Issued = value;
					this.SendPropertyChanged("Issued");
					this.OnIssuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collected", DbType="DateTime")]
		public System.Nullable<System.DateTime> Collected
		{
			get
			{
				return this._Collected;
			}
			set
			{
				if ((this._Collected != value))
				{
					this.OnCollectedChanging(value);
					this.SendPropertyChanging();
					this._Collected = value;
					this.SendPropertyChanged("Collected");
					this.OnCollectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Station", DbType="NVarChar(50)")]
		public string Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				if ((this._Station != value))
				{
					this.OnStationChanging(value);
					this.SendPropertyChanging();
					this._Station = value;
					this.SendPropertyChanged("Station");
					this.OnStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collector", DbType="NVarChar(50)")]
		public string Collector
		{
			get
			{
				return this._Collector;
			}
			set
			{
				if ((this._Collector != value))
				{
					this.OnCollectorChanging(value);
					this.SendPropertyChanging();
					this._Collector = value;
					this.SendPropertyChanged("Collector");
					this.OnCollectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultHash", DbType="NVarChar(50)")]
		public string ResultHash
		{
			get
			{
				return this._ResultHash;
			}
			set
			{
				if ((this._ResultHash != value))
				{
					this.OnResultHashChanging(value);
					this.SendPropertyChanging();
					this._ResultHash = value;
					this.SendPropertyChanged("ResultHash");
					this.OnResultHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobName", DbType="NVarChar(50)")]
		public string BlobName
		{
			get
			{
				return this._BlobName;
			}
			set
			{
				if ((this._BlobName != value))
				{
					this.OnBlobNameChanging(value);
					this.SendPropertyChanging();
					this._BlobName = value;
					this.SendPropertyChanged("BlobName");
					this.OnBlobNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterFriends")]
	public partial class T_TwitterFriend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private string _SourceUserName;
		
		private System.Nullable<long> _SourceId;
		
		private string _TargetUserName;
		
		private System.Nullable<long> _TargetId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<bool> _Complete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnSourceUserNameChanging(string value);
    partial void OnSourceUserNameChanged();
    partial void OnSourceIdChanging(System.Nullable<long> value);
    partial void OnSourceIdChanged();
    partial void OnTargetUserNameChanging(string value);
    partial void OnTargetUserNameChanged();
    partial void OnTargetIdChanging(System.Nullable<long> value);
    partial void OnTargetIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCompleteChanging(System.Nullable<bool> value);
    partial void OnCompleteChanged();
    #endregion
		
		public T_TwitterFriend()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceUserName", DbType="NVarChar(256)")]
		public string SourceUserName
		{
			get
			{
				return this._SourceUserName;
			}
			set
			{
				if ((this._SourceUserName != value))
				{
					this.OnSourceUserNameChanging(value);
					this.SendPropertyChanging();
					this._SourceUserName = value;
					this.SendPropertyChanged("SourceUserName");
					this.OnSourceUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="BigInt")]
		public System.Nullable<long> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetUserName", DbType="NVarChar(256)")]
		public string TargetUserName
		{
			get
			{
				return this._TargetUserName;
			}
			set
			{
				if ((this._TargetUserName != value))
				{
					this.OnTargetUserNameChanging(value);
					this.SendPropertyChanging();
					this._TargetUserName = value;
					this.SendPropertyChanged("TargetUserName");
					this.OnTargetUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetId", DbType="BigInt")]
		public System.Nullable<long> TargetId
		{
			get
			{
				return this._TargetId;
			}
			set
			{
				if ((this._TargetId != value))
				{
					this.OnTargetIdChanging(value);
					this.SendPropertyChanging();
					this._TargetId = value;
					this.SendPropertyChanged("TargetId");
					this.OnTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complete", DbType="Bit")]
		public System.Nullable<bool> Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TwitterFollowers")]
	public partial class T_TwitterFollower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CollectionTaskId;
		
		private string _TargetUserName;
		
		private System.Nullable<long> _TargetId;
		
		private string _SourceUserName;
		
		private System.Nullable<long> _SourceId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<bool> _Complete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCollectionTaskIdChanging(System.Nullable<long> value);
    partial void OnCollectionTaskIdChanged();
    partial void OnTargetUserNameChanging(string value);
    partial void OnTargetUserNameChanged();
    partial void OnTargetIdChanging(System.Nullable<long> value);
    partial void OnTargetIdChanged();
    partial void OnSourceUserNameChanging(string value);
    partial void OnSourceUserNameChanged();
    partial void OnSourceIdChanging(System.Nullable<long> value);
    partial void OnSourceIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCompleteChanging(System.Nullable<bool> value);
    partial void OnCompleteChanged();
    #endregion
		
		public T_TwitterFollower()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionTaskId", DbType="BigInt")]
		public System.Nullable<long> CollectionTaskId
		{
			get
			{
				return this._CollectionTaskId;
			}
			set
			{
				if ((this._CollectionTaskId != value))
				{
					this.OnCollectionTaskIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionTaskId = value;
					this.SendPropertyChanged("CollectionTaskId");
					this.OnCollectionTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetUserName", DbType="NVarChar(256)")]
		public string TargetUserName
		{
			get
			{
				return this._TargetUserName;
			}
			set
			{
				if ((this._TargetUserName != value))
				{
					this.OnTargetUserNameChanging(value);
					this.SendPropertyChanging();
					this._TargetUserName = value;
					this.SendPropertyChanged("TargetUserName");
					this.OnTargetUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetId", DbType="BigInt")]
		public System.Nullable<long> TargetId
		{
			get
			{
				return this._TargetId;
			}
			set
			{
				if ((this._TargetId != value))
				{
					this.OnTargetIdChanging(value);
					this.SendPropertyChanging();
					this._TargetId = value;
					this.SendPropertyChanged("TargetId");
					this.OnTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceUserName", DbType="NVarChar(256)")]
		public string SourceUserName
		{
			get
			{
				return this._SourceUserName;
			}
			set
			{
				if ((this._SourceUserName != value))
				{
					this.OnSourceUserNameChanging(value);
					this.SendPropertyChanging();
					this._SourceUserName = value;
					this.SendPropertyChanged("SourceUserName");
					this.OnSourceUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="BigInt")]
		public System.Nullable<long> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complete", DbType="Bit")]
		public System.Nullable<bool> Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this.OnCompleteChanging(value);
					this.SendPropertyChanging();
					this._Complete = value;
					this.SendPropertyChanged("Complete");
					this.OnCompleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
