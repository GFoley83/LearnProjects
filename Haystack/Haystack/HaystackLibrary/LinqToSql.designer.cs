#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HaystackLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="haystack")]
	public partial class LinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCollectionTask(CollectionTask instance);
    partial void UpdateCollectionTask(CollectionTask instance);
    partial void DeleteCollectionTask(CollectionTask instance);
    #endregion
		
		public LinqToSqlDataContext() : 
				base(global::HaystackLibrary.Properties.Settings.Default.haystackConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CollectionTask> CollectionTasks
		{
			get
			{
				return this.GetTable<CollectionTask>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CollectionTasks")]
	public partial class CollectionTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _State;
		
		private System.DateTime _Created;
		
		private string _Project;
		
		private string _Source;
		
		private string _Command;
		
		private string _Target;
		
		private System.Nullable<System.DateTime> _Issued;
		
		private System.Nullable<System.DateTime> _Collected;
		
		private string _Station;
		
		private string _Collector;
		
		private string _BlobName;
		
		private string _BlobHash;
		
		private System.Nullable<System.DateTime> _Processed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnCommandChanging(string value);
    partial void OnCommandChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnIssuedChanging(System.Nullable<System.DateTime> value);
    partial void OnIssuedChanged();
    partial void OnCollectedChanging(System.Nullable<System.DateTime> value);
    partial void OnCollectedChanged();
    partial void OnStationChanging(string value);
    partial void OnStationChanged();
    partial void OnCollectorChanging(string value);
    partial void OnCollectorChanged();
    partial void OnBlobNameChanging(string value);
    partial void OnBlobNameChanged();
    partial void OnBlobHashChanging(string value);
    partial void OnBlobHashChanged();
    partial void OnProcessedChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedChanged();
    #endregion
		
		public CollectionTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Command", DbType="NVarChar(MAX)")]
		public string Command
		{
			get
			{
				return this._Command;
			}
			set
			{
				if ((this._Command != value))
				{
					this.OnCommandChanging(value);
					this.SendPropertyChanging();
					this._Command = value;
					this.SendPropertyChanged("Command");
					this.OnCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(MAX)")]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issued", DbType="DateTime")]
		public System.Nullable<System.DateTime> Issued
		{
			get
			{
				return this._Issued;
			}
			set
			{
				if ((this._Issued != value))
				{
					this.OnIssuedChanging(value);
					this.SendPropertyChanging();
					this._Issued = value;
					this.SendPropertyChanged("Issued");
					this.OnIssuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collected", DbType="DateTime")]
		public System.Nullable<System.DateTime> Collected
		{
			get
			{
				return this._Collected;
			}
			set
			{
				if ((this._Collected != value))
				{
					this.OnCollectedChanging(value);
					this.SendPropertyChanging();
					this._Collected = value;
					this.SendPropertyChanged("Collected");
					this.OnCollectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Station", DbType="NVarChar(50)")]
		public string Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				if ((this._Station != value))
				{
					this.OnStationChanging(value);
					this.SendPropertyChanging();
					this._Station = value;
					this.SendPropertyChanged("Station");
					this.OnStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collector", DbType="NVarChar(50)")]
		public string Collector
		{
			get
			{
				return this._Collector;
			}
			set
			{
				if ((this._Collector != value))
				{
					this.OnCollectorChanging(value);
					this.SendPropertyChanging();
					this._Collector = value;
					this.SendPropertyChanged("Collector");
					this.OnCollectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobName", DbType="NVarChar(50)")]
		public string BlobName
		{
			get
			{
				return this._BlobName;
			}
			set
			{
				if ((this._BlobName != value))
				{
					this.OnBlobNameChanging(value);
					this.SendPropertyChanging();
					this._BlobName = value;
					this.SendPropertyChanged("BlobName");
					this.OnBlobNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobHash", DbType="NVarChar(50)")]
		public string BlobHash
		{
			get
			{
				return this._BlobHash;
			}
			set
			{
				if ((this._BlobHash != value))
				{
					this.OnBlobHashChanging(value);
					this.SendPropertyChanging();
					this._BlobHash = value;
					this.SendPropertyChanged("BlobHash");
					this.OnBlobHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="DateTime")]
		public System.Nullable<System.DateTime> Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
